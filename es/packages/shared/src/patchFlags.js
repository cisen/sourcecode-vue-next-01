// Patch flags are optimization hints generated by the compiler.
// when a block with dynamicChildren is encountered during diff, the algorithm
// enters "optimized mode". In this mode, we know that the vdom is produced by
// a render function generated by the compiler, so the algorithm only needs to
// handle updates explicitly marked by these patch flags.
// runtime object for public consumption
export const PublicPatchFlags = {
    TEXT: 1 /* TEXT */,
    CLASS: 2 /* CLASS */,
    STYLE: 4 /* STYLE */,
    PROPS: 8 /* PROPS */,
    NEED_PATCH: 32 /* NEED_PATCH */,
    FULL_PROPS: 16 /* FULL_PROPS */,
    KEYED_FRAGMENT: 64 /* KEYED_FRAGMENT */,
    UNKEYED_FRAGMENT: 128 /* UNKEYED_FRAGMENT */,
    DYNAMIC_SLOTS: 256 /* DYNAMIC_SLOTS */,
    BAIL: -1 /* BAIL */
};
// dev only flag -> name mapping
export const PatchFlagNames = {
    [1 /* TEXT */]: `TEXT`,
    [2 /* CLASS */]: `CLASS`,
    [4 /* STYLE */]: `STYLE`,
    [8 /* PROPS */]: `PROPS`,
    [32 /* NEED_PATCH */]: `NEED_PATCH`,
    [16 /* FULL_PROPS */]: `FULL_PROPS`,
    [64 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,
    [128 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,
    [256 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,
    [-1 /* BAIL */]: `BAIL`
};
